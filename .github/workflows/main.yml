name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  backend:
    name: Build Backend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Java JDK
        uses: actions/setup-java@v4.4.0
        with:
          java-version: '21'
          distribution: 'temurin'
          java-package: 'jdk'
          
      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run Unit Tests
        working-directory: ./backend 
        run: mvn test

      - name: Build Docker image (Backend)
        working-directory: ./docker
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/ocp-planning-backend:${{ secrets.DOCKER_TAG }} -f Dockerfile.backend ..

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Backend Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/ocp-planning-backend:${{ secrets.DOCKER_TAG }}

  frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: backend 

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: |
          npm install

      - name: Build Docker image (Frontend)
        working-directory: ./docker
        run: docker build --build-arg NEXT_PUBLIC_API_URL=${{ secrets.BACKEND_URL }} -t ${{ secrets.DOCKER_USERNAME }}/ocp-planning-frontend:${{ secrets.DOCKER_TAG }} -f Dockerfile.frontend ..

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Frontend Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/ocp-planning-frontend:${{ secrets.DOCKER_TAG }}


  # deploy:
  #   name: Deploy to Server
  #   runs-on: ubuntu-latest
  #   needs: frontend
  #   needs: backend

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4

  #     - name: Set up SSH keys
  #       uses: webfactory/ssh-agent@v0.5.3
  #       with:
  #         ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

  #     - name: Copy Docker Compose files
  #       run: |
  #         scp -i ~/.ssh/id_rsa ./docker/{compose.myl,compode.prod.yml,prod.sh} user@server:/home/root/infrastructure/projects/ocp-planning
  #     - name: Deploy with Docker Compose
  #       run: |
  #         ssh -i ~/.ssh/id_rsa user@server 'cd /path/to/deploy && docker-compose pull && docker-compose up -d'
